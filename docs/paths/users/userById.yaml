get:
  tags:
    - Users
  summary: Get a user by ID
  description: Retrieve a single user by their unique ID, including their associated accounts and profiles.
  parameters:
    - in: path
      name: id
      required: true
      description: Unique identifier of the user
      schema:
        type: string
  responses:
    200:
      description: User found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: User Found
              data:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  accounts:
                    type: array
                    items:
                      type: object
                  profile:
                    type: object
                    properties:
                      identity_type:
                        type: string
                      identity_number:
                        type: string
                      address:
                        type: string
    400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid user ID
    404:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: User not found
    500:
      description: Internal server error
delete:
  tags:
    - Users
  summary: Delete a user by ID
  description: Delete a user by their unique ID.
  parameters:
    - in: path
      name: id
      required: true
      description: Unique identifier of the user
      schema:
        type: string
  responses:
    200:
      description: User deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: User deleted
              data:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
    400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid user ID
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: You are not authorized to delete this user
    404:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: User not found
    500:
      description: Internal server error
put:
  tags:
    - Users
  summary: Update a user by ID
  description: Update the details of a user by their unique ID.
  parameters:
    - in: path
      name: id
      required: true
      description: Unique identifier of the user
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              example: John Doe
            email:
              type: string
              example: johndoe@example.com
            password:
              type: string
              example: password123
            profile:
              type: object
              properties:
                identity_type:
                  type: string
                  example: KTP
                identity_number:
                  type: string
                  example: 123456789
                address:
                  type: string
                  example: 123 Main St
  responses:
    200:
      description: User updated
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: User updated
              data:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
    400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid user data
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: You are not authorized to update this user
    404:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: User not found
    500:
      description: Internal server error
